
import { PSpec, Definitions } from "../../lib/poiesis/index.ts";

export const nn = async (code: string,defs: Definitions, fx:any ) => {
    const trainData = [5.1,2.5,3.0,1.1,5.8,2.7,3.9,1.2,5.4,3.0,4.5,1.5,6.2,2.8,4.8,1.8,6.1,2.6,5.6,1.4,6.7,3.0,5.2,2.3,6.0,2.9,4.5,1.5,4.3,3.0,1.1,0.1,4.7,3.2,1.3,0.2,6.5,3.0,5.2,2.0,7.2,3.2,6.0,1.8,6.3,3.3,4.7,1.6,6.9,3.1,5.4,2.1,6.0,3.4,4.5,1.6,5.5,2.4,3.8,1.1,7.4,2.8,6.1,1.9,6.3,3.4,5.6,2.4,6.5,2.8,4.6,1.5,7.3,2.9,6.3,1.8,5.1,3.4,1.5,0.2,5.4,3.9,1.7,0.4,5.2,2.7,3.9,1.4,6.9,3.2,5.7,2.3,5.5,2.3,4.0,1.3,6.0,3.0,4.8,1.8,5.6,2.7,4.2,1.3,5.6,2.8,4.9,2.0,6.8,2.8,4.8,1.4,6.9,3.1,4.9,1.5,7.2,3.6,6.1,2.5,6.3,2.5,4.9,1.5,5.9,3.0,4.2,1.5,6.7,3.3,5.7,2.1,5.7,3.0,4.2,1.2,6.4,2.9,4.3,1.3,5.0,3.2,1.2,0.2,5.0,3.4,1.5,0.2,6.2,2.2,4.5,1.5,5.9,3.2,4.8,1.8,5.6,3.0,4.1,1.3,5.4,3.9,1.3,0.4,5.0,3.0,1.6,0.2,5.9,3.0,5.1,1.8,5.0,2.3,3.3,1.0,6.4,2.8,5.6,2.2,4.8,3.0,1.4,0.1,5.4,3.7,1.5,0.2,6.4,3.2,5.3,2.3,4.6,3.6,1.0,0.2,5.0,3.5,1.3,0.3,4.8,3.4,1.9,0.2,6.3,2.7,4.9,1.8,6.3,2.8,5.1,1.5,5.2,3.5,1.5,0.2,6.1,2.8,4.0,1.3,6.7,3.1,4.7,1.5,6.0,2.7,5.1,1.6,5.1,3.5,1.4,0.2,5.5,4.2,1.4,0.2,6.5,3.0,5.5,1.8,4.4,2.9,1.4,0.2,7.9,3.8,6.4,2.0,6.4,2.8,5.6,2.1,6.9,3.1,5.1,2.3,5.0,3.4,1.6,0.4,6.0,2.2,5.0,1.5,6.1,2.9,4.7,1.4,5.6,2.9,3.6,1.3,4.5,2.3,1.3,0.3,5.7,2.8,4.1,1.3,5.2,4.1,1.5,0.1,6.1,2.8,4.7,1.2,6.8,3.0,5.5,2.1,6.1,3.0,4.9,1.8,5.8,2.8,5.1,2.4,5.5,2.6,4.4,1.2,4.9,3.1,1.5,0.1,6.5,3.0,5.8,2.2,5.8,2.7,5.1,1.9,4.6,3.2,1.4,0.2,6.6,2.9,4.6,1.3,6.3,2.3,4.4,1.3,6.3,2.9,5.6,1.8,4.9,3.0,1.4,0.2,5.7,2.9,4.2,1.3,5.0,3.6,1.4,0.2,7.7,3.0,6.1,2.3,7.2,3.0,5.8,1.6,6.2,3.4,5.4,2.3,5.1,3.8,1.6,0.2,6.0,2.2,4.0,1.0,6.4,3.2,4.5,1.5,5.5,2.5,4.0,1.3,5.6,2.5,3.9,1.1,5.0,3.5,1.6,0.6,6.7,3.1,5.6,2.4,7.0,3.2,4.7,1.4,6.7,2.5,5.8,1.8,5.4,3.4,1.7,0.2,4.9,2.5,4.5,1.7,6.4,3.1,5.5,1.8,5.8,2.7,5.1,1.9,4.8,3.0,1.4,0.3,6.6,3.0,4.4,1.4,4.8,3.4,1.6,0.2,6.2,2.9,4.3,1.3,5.5,3.5,1.3,0.2,5.7,2.8,4.5,1.3,4.8,3.1,1.6,0.2,5.8,4.0,1.2,0.2,6.3,3.3,6.0,2.5,5.4,3.4,1.5,0.4,4.9,3.1,1.5,0.1,4.4,3.0,1.3,0.2,5.1,3.8,1.9,0.4,4.7,3.2,1.6,0.2,5.0,3.3,1.4,0.2,5.1,3.5,1.4,0.3,5.8,2.7,4.1,1.0,5.3,3.7,1.5,0.2,6.8,3.2,5.9,2.3,5.1,3.7,1.5,0.4,7.7,2.6,6.9,2.3,5.7,4.4,1.5,0.4,5.7,2.6,3.5,1.0,7.7,3.8,6.7,2.2,5.7,3.8,1.7,0.3,7.1,3.0,5.9,2.1,4.9,3.1,1.5,0.1,7.6,3.0,6.6,2.1,6.3,2.5,5.0,1.9,5.7,2.5,5.0,2.0,5.0,2.0,3.5,1.0,6.5,3.2,5.1,2.0,4.9,2.4,3.3,1.0,5.6,3.0,4.5,1.5,4.4,3.2,1.3,0.2,5.1,3.8,1.5,0.3,5.8,2.6,4.0,1.2,5.2,3.4,1.4,0.2,5.5,2.4,3.7,1.0,6.7,3.3,5.7,2.5,6.4,2.7,5.3,1.9,5.1,3.3,1.7,0.5];

    const trainResults = [0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0];

    const testData = [4.6,3.4,1.4,0.3,4.6,3.1,1.5,0.2,7.7,2.8,6.7,2.0,6.1,3.0,4.6,1.4,6.7,3.1,4.4,1.4,6.7,3.0,5.0,1.7];

    const testResults = [1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0];

    // Define constants
    const batchSize = 16;
    const nodesPerLayer = 4;
    const groupSize = batchSize * nodesPerLayer;
    const numInputs = 4;
    const layer1Size = 4;
    const layer2Size = 4;
    const layer3Size = 3;
    const numTrainPoints = Math.trunc(trainData.length/numInputs);
    const numTestPoints = Math.trunc(testData.length/numInputs);
    const numWeights = layer1Size * numInputs + layer2Size * layer1Size + layer3Size * layer2Size;
    const numBias = layer1Size + layer2Size + layer3Size;
    const numEpochs = 150;
    const eta = 0.001;

    const sigma = Math.sqrt(2.0/numInputs);
    // Generate and store weights
    const weightData = new Array(numWeights);
    for (let i = 0; i < numWeights; i+= 2) {
        let x1 = Math.random();
        let x2 = Math.random();
        weightData[i] = Math.sqrt(-2.0 * Math.log(x1)) * Math.cos(2 * Math.PI * x2) * sigma;
        weightData[i + 1] = Math.sqrt(-2.0 * Math.log(x1)) * Math.sin(2 * Math.PI * x2) * sigma;
    }

    const test_results = Array.from({ length: numTestPoints * 3 }, (_,i) => 0.0);
    
   
    return (): PSpec => ({ 
        code: code, 
        defs: defs ,
        storages:[
            { name: "train_data", size: trainData.length, data: trainData },
            { name: "train_results", size: trainResults.length, data: trainResults },
            { name: "test_data", size: testData.length, data: testData },
            { name: "test_results", size: numTestPoints * 3, data: test_results, read: true },
            { name: "weights", size: weightData.length, data: weightData },
            { name: "bias_weights", size: numBias },
            { name: "debug", size: 1, read: true }
        ],
        computes: [
            { 
                name: "computeMain", 
                workgroups: [1,1,1],
                constants: {
                    group_size: groupSize,
                    batch_size: batchSize,
                    num_train_points: numTrainPoints,
                    num_test_points: numTestPoints,
                    num_inputs: numInputs,
                    l1_size: layer1Size,
                    l2_size: layer2Size,
                    l3_size: layer3Size,
                    num_weights: numWeights,
                    num_bias: numBias,
                    num_epochs: numEpochs,
                    eta: eta
                }        
            }
        ]
    });
}
    